{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 1","text":""},{"location":"#1-udp-hello-serverclient","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1: UDP \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440 (Hello, server/client)","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0435 UDP. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 <code>\"Hello, server\"</code>, \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 <code>\"Hello, client\"</code>.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (<code>udp_server.py</code>):</p> <pre><code>import socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u043e\u043a\u0435\u0442\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443\nserver_socket.bind(('localhost', 8080))\nprint(\"UDP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8080...\")\n\nwhile True:\n    # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    data, client_address = server_socket.recvfrom(1024)\n    print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 {client_address}: {data.decode()}\")\n\n    # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442\n    response = \"Hello, client\"\n    server_socket.sendto(response.encode(), client_address)\n</code></pre> <p>\u041a\u043e\u0434 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (<code>udp_client.py</code>):</p> <pre><code>import socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u043e\u043a\u0435\u0442\nclient_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443\nmessage = \"Hello, server\"\nclient_socket.sendto(message.encode(), ('localhost', 8080))\n\n# \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\ndata, server_address = client_socket.recvfrom(1024)\nprint(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode()}\")\n\n# \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442\nclient_socket.close()\n\n</code></pre>"},{"location":"#2-tcp-","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2: TCP \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440 (\u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430)","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041a\u043b\u0438\u0435\u043d\u0442 \u0432\u0432\u043e\u0434\u0438\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430, \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (<code>tcp_server.py</code>):</p> <pre><code>import socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043f\u0440\u0438\u0435\u043c\u0430 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 8080\nserver_socket.bind(('localhost', 8080))\nprint(\"UDP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8080...\")\n\nwhile True:\n    # \u0416\u0434\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    data, client_address = server_socket.recvfrom(1024)\n    message = data.decode()\n    print(f\"\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 {client_address}: {message}\")\n\n    try:\n        # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043f\u043b\u043e\u0449\u0430\u0434\u044c\n        a, h = map(float, message.split())\n        area = a * h\n        response = f\"\u041f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 = {area}\"\n    except Exception as e:\n        # \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435, \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435\n        response = f\"\u041e\u0448\u0438\u0431\u043a\u0430: {e}\"\n\n    # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n    server_socket.sendto(response.encode(), client_address)\n\n</code></pre> <p>\u041a\u043e\u0434 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (<code>tcp_client.py</code>):</p> <pre><code>import socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\nclient_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# \u0412\u0432\u043e\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\na = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430: \")\nh = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u044b\u0441\u043e\u0442\u0443 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430: \")\n\n# \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0443\nmessage = f\"{a} {h}\"\nclient_socket.sendto(message.encode(), ('localhost', 8080))\n\n# \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0435\u0433\u043e\ndata, server_address = client_socket.recvfrom(1024)\nprint(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode()}\")\n\n# \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435, \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0430\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u044b\nclient_socket.close()\n\n</code></pre>"},{"location":"#3-http-html-","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3: HTTP \u0441\u0435\u0440\u0432\u0435\u0440 (\u043e\u0442\u0434\u0430\u0447\u0430 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b)","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 TCP-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 <code>index.html</code> \u0432 \u0432\u0438\u0434\u0435 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (<code>http_server.py</code>):</p> <pre><code>import socket\n\n# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\nHOST = 'localhost'  # \u0421\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u0435\nPORT = 8080         # \u041f\u043e\u0440\u0442 \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u0441\u043e\u043a\u0435\u0442 (\u0434\u043b\u044f HTTP \u043d\u0443\u0436\u0435\u043d TCP)\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443\nserver_socket.bind((HOST, PORT))\n\n# \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f, \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 1 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\nserver_socket.listen(1)\n\nprint(f\"HTTP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{HOST}:{PORT}\")\n\nwhile True:\n    # \u041e\u0436\u0438\u0434\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    client_connection, client_address = server_socket.accept()\n    print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {client_address}\")\n\n    # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c HTTP-\u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    request = client_connection.recv(1024).decode()\n    print(\"\u0417\u0430\u043f\u0440\u043e\u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:\")\n    print(request)\n\n    # \u0427\u0438\u0442\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 HTML-\u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430\n    with open(\"/Users/glavnipopivy/UCHEBA/web-prog/TonikX-ITMO_ICT_WebDevelopment_2025-2026/lab1/Task 3/index.html\", \"r\", encoding=\"utf-8\") as f:\n        html_content = f.read()\n\n    # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c HTTP-\u043e\u0442\u0432\u0435\u0442\n    response = (\n        \"HTTP/1.1 200 OK\\r\\n\"                         # \u0421\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430\n        \"Content-Type: text/html; charset=utf-8\\r\\n\"  # \u0422\u0438\u043f \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430\n        f\"Content-Length: {len(html_content.encode())}\\r\\n\"  # \u0414\u043b\u0438\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e\n        \"\\r\\n\"                                        # \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043e\u0442\u0434\u0435\u043b\u044f\u0435\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043e\u0442 \u0442\u0435\u043b\u0430\n        f\"{html_content}\"                             # \u0422\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 (HTML)\n    )\n\n    # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n    client_connection.sendall(response.encode())\n\n    # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c\n    client_connection.close()\n\n</code></pre>"},{"location":"#4-tcp-threading","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4: \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 (TCP + threading)","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0442\u043e\u043a\u043e\u0432 (<code>threading</code>). \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u044f \u0438\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (<code>chat_server.py</code>):</p> <pre><code>import socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043f\u0440\u0438\u0435\u043c\u0430 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n# \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 8080\nserver_socket.bind(('localhost', 8080))\nprint(\"UDP \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8080...\")\n\nwhile True:\n    # \u0416\u0434\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    data, client_address = server_socket.recvfrom(1024)\n    message = data.decode()\n    print(f\"\u0417\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 {client_address}: {message}\")\n\n    try:\n        # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043f\u043b\u043e\u0449\u0430\u0434\u044c\n        a, h = map(float, message.split())\n        area = a * h\n        response = f\"\u041f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 = {area}\"\n    except Exception as e:\n        # \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435, \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435\n        response = f\"\u041e\u0448\u0438\u0431\u043a\u0430: {e}\"\n\n    # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n    server_socket.sendto(response.encode(), client_address)\n</code></pre> <p>\u041a\u043e\u0434 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (<code>chat_client.py</code>):</p> <pre><code>import socket\nimport threading\n\nHOST = \"localhost\"  # \u0410\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\nPORT = 8080         # \u041f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n\n# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435\ndef receive_messages(sock):\n    while True:\n        try:\n            data = sock.recv(1024)  # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n            if not data:             # \u0415\u0441\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043a\u0440\u044b\u043b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n                break\n            print(data.decode(\"utf-8\"))  # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\n        except:\n            break\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u0441\u043e\u043a\u0435\u0442 \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.connect((HOST, PORT))\n\n# \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\nthreading.Thread(target=receive_messages, args=(sock,), daemon=True).start()\n\ntry:\n    while True:\n        # \u0412\u0432\u043e\u0434\u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\n        msg = input()\n        sock.sendall(msg.encode(\"utf-8\"))\nexcept KeyboardInterrupt:\n    # \u0417\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u0440\u0438 Ctrl+C\n    print(\"\\n\u0412\u044b\u0445\u043e\u0434...\")\nfinally:\n    # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n    sock.close()\n</code></pre>"},{"location":"#5-getpost","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5: \u0412\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 GET/POST","text":"<p>\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \u0438 \u043e\u0446\u0435\u043d\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 POST-\u0437\u0430\u043f\u0440\u043e\u0441, \u0445\u0440\u0430\u043d\u0438\u0442 \u0438\u0445 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0432\u0441\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0432 HTML-\u0442\u0430\u0431\u043b\u0438\u0446\u0435.</p> <p>\u041a\u043e\u0434 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (<code>get_post_server.py</code>):</p> <pre><code>import socket\nfrom urllib.parse import unquote_plus  # \u0414\u043b\u044f \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u044b \u0438\u0437 URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0438\n\nHOST = \"localhost\"\nPORT = 8080\n\ngrades = {}  # \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c\n\ndef build_html():\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u043e\u0446\u0435\u043d\u043e\u043a\"\"\"\n    # \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c\u0438 \u043e\u0446\u0435\u043d\u043a\u0430\u043c\u0438\n    rows = \"\".join(f\"&lt;tr&gt;&lt;td&gt;{subject}&lt;/td&gt;&lt;td&gt;{grade}&lt;/td&gt;&lt;/tr&gt;\" for subject, grade in grades.items())\n    html = f\"\"\"\n    &lt;!DOCTYPE html&gt;\n    &lt;html lang=\"ru\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\"&gt;\n        &lt;title&gt;\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443&lt;/h1&gt;\n        &lt;form method=\"POST\" action=\"/\"&gt;\n            \u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: &lt;input type=\"text\" name=\"subject\" required&gt;\n            \u041e\u0446\u0435\u043d\u043a\u0430: &lt;input type=\"text\" name=\"grade\" required&gt;\n            &lt;input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\"&gt;\n        &lt;/form&gt;\n        &lt;h2&gt;\u0412\u0441\u0435 \u043e\u0446\u0435\u043d\u043a\u0438&lt;/h2&gt;\n        &lt;table border=\"1\"&gt;\n            &lt;tr&gt;&lt;th&gt;\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430&lt;/th&gt;&lt;th&gt;\u041e\u0446\u0435\u043d\u043a\u0430&lt;/th&gt;&lt;/tr&gt;\n            {rows}\n        &lt;/table&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n    \"\"\"\n    return html\n\ndef parse_post_data(body):\n    data = {}\n    for pair in body.split(\"&amp;\"):  # \u041a\u0430\u0436\u0434\u0430\u044f \u043f\u0430\u0440\u0430 key=value\n        if \"=\" in pair:\n            key, value = pair.split(\"=\", 1)\n            data[key] = unquote_plus(value)  # \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c URL-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443\n    return data\n\ndef handle_client(conn):\n    try:\n        request = conn.recv(4096).decode(\"utf-8\")  # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\n        if not request:\n            return\n        headers, _, body = request.partition(\"\\r\\n\\r\\n\")  # \u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0438 \u0442\u0435\u043b\u043e\n        first_line = headers.splitlines()[0]  # \u0411\u0435\u0440\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n        method, path, _ = first_line.split()\n\n        if method == \"POST\":\n            post_data = parse_post_data(body)  # \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b\n            subject = post_data.get(\"subject\", \"\").strip()\n            grade = post_data.get(\"grade\", \"\").strip()\n            if subject and grade:\n                grades[subject] = grade  # \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043e\u0446\u0435\u043d\u043a\u0443\n\n        # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c HTML-\u043e\u0442\u0432\u0435\u0442\n        html_content = build_html()\n        response = (\n            \"HTTP/1.1 200 OK\\r\\n\"\n            \"Content-Type: text/html; charset=utf-8\\r\\n\"\n            f\"Content-Length: {len(html_content.encode('utf-8'))}\\r\\n\"\n            \"\\r\\n\"\n            f\"{html_content}\"\n        )\n        conn.sendall(response.encode(\"utf-8\"))  # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n    except Exception as e:\n        print(f\"\u041e\u0448\u0438\u0431\u043a\u0430: {e}\")\n    finally:\n        conn.close()  # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n\n# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 TCP-\u0441\u043e\u043a\u0435\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\nserver_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_sock.bind((HOST, PORT))\nserver_sock.listen(5)  # \u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 5 \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439\nprint(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0446\u0435\u043d\u043e\u043a \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{HOST}:{PORT}\")\n\ntry:\n    while True:\n        conn, addr = server_sock.accept()  # \u041e\u0436\u0438\u0434\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n        handle_client(conn)  # \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\nexcept KeyboardInterrupt:\n    print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d\")\nfinally:\n    server_sock.close()\n\n</code></pre>"}]}